<div class="calendar-wrapper">
    <div class="row">
        <?php $this->currentTab = CALENDAR_MONTH_TAB; ?>
        <?= $this->render('partial-left-calendar.phtml'); ?>
        <div class="col-md-9 col-xs-12">

            <!-- Tab panes -->
            <div class="tab-content">
                <div role="tabpanel" class="tab-pane fade in active" id="month">
                <div id='calendar'></div>
                </div>
            </div>
            <!-- end tabcontent-->
        </div>
    </div>
</div>
<?= $this->partial('partial-right-popup.phtml', $this); ?>
<?= $this->render('partial-callback-js.phtml'); ?>

<script>
    
    initMainDatePickerOnCalendarByDay('datepicker', {
        "currentDay": <?= $this->day ?>,
        "currentMonth": <?= $this->month ?>,
        "currentYear": <?= $this->year ?>
    });
    initDatePicker('event-fromdate-datepicker');
    initDatePicker('event-todate-datepicker');
    
    setDatePickerDate('datepicker', <?= $this->day ?>, <?= $this->month ?>, <?= $this->year ?>);
    setDatePickerDate('event-fromdate-datepicker', <?= $this->day ?>, <?= $this->month ?>, <?= $this->year ?>);
    setDatePickerDate('event-todate-datepicker', <?= $this->day ?>, <?= $this->month ?>, <?= $this->year ?>);
    
    initCalendarTemplate();
    processChangeCategoryDropdown();
    setSearchUserOnAttendForm();
    setSubmitCalendarEvent();
    setClickDeleteEvent();
    
    var newEventsResource = {
        url: '/calendar/events', // use the `url` property
            type: 'POST',
            data: getCommonPost4AllTab(),
            error: function() {
                alert('there was an error while fetching events!');
            },
 
    };
    var groupEventsResource = {
        url: '/calendar/get-group-events', // use the `url` property
            type: 'POST',
            data: getCommonPost4AllTab(),
            error: function() {
                alert('there was an error while fetching events!');
            },
 
    };
    
    $('#testid').click(function(){
       $('#calendar').fullCalendar('removeEventSource', newEventsResource);
    
    
    
    //make new resource
     newEventsResource = {
        url: '/calendar/events', // use the `url` property
            type: 'POST',
            data: getCommonPost4AllTab(),
            error: function() {
                alert('there was an error while fetching events!');
            },
    };    
       $('#calendar').fullCalendar('addEventSource', newEventsResource);
    })
    
    function reloadEvents() {
       $('#calendar').fullCalendar('removeEventSource', newEventsResource);
       $('#calendar').fullCalendar('removeEventSource', groupEventsResource);
      
        //make new resource
         newEventsResource = {
            url: '/calendar/events', // use the `url` property
                type: 'POST',
                data: getCommonPost4AllTab(),
                error: function() {
                    alert('there was an error while fetching events!');
                },
                color: 'yellow',   // a non-ajax option
                textColor: 'black' // a non-ajax option 
        };  
        
        groupEventsResource = {
            url: '/calendar/get-group-events', // use the `url` property
                type: 'POST',
                data: getCommonPost4AllTab(),
                error: function() {
                    alert('there was an error while fetching events!');
                },

        };        
       $('#calendar').fullCalendar('addEventSource', newEventsResource);        
       $('#calendar').fullCalendar('addEventSource', groupEventsResource);        
    }
    
	$(document).ready(function() {
		$('#calendar').fullCalendar({
        lang: '<?= $_SESSION['language'] ?>',
        weekNumberTitle: '<?= $this->locales->calendarEvent->weekNumberFc ?>',
        scrollTime: '<?= date('H:00:00', time()) ?>', 
		buttonIcons: {
			prev: 'left-single-arrow',
			next: 'right-single-arrow',
			prevYear: 'left-double-arrow',
			nextYear: 'right-double-arrow'			
		},

		defaultView: 'noWeekendsWeek',
    customButtons: {
        myCustomButton: {
            text: 'custom!',
            click: function() {
                $(this).fullCalendar({
					weekNumbers: false
				});
            }
        }
    },	

  views: {
        noWeekendsMonth: {
			
            type: 'month',
			//weekends: false,
            buttonText: '<?= $this->locales->calendarEvent->month ?>'
        },

        noWeekendsWeek: {
            type: 'agendaWeek',
            weekends: false,
            buttonText: '<?= $this->locales->calendarEvent->workWeek ?>'
        },

    },	

header: {
            left: 'prev, next, today',
            center: 'title',
            right: 'noWeekendsMonth, agendaWeek, noWeekendsWeek, agendaDay'
        },
		


    eventClick: function(calEvent, jsEvent, view) {
      
        showEditPopup(calEvent.event_id);

    },
   
   			weekNumbers: true,
			defaultDate: '<?= $this->year ?>-<?= sprintf('%02d', $this->month) ?>-<?= sprintf('%02d', $this->day) ?>',
			editable: true,
			eventLimit: true, // allow "more" link when too many events
			eventSources: [
                newEventsResource,
                groupEventsResource
            ]
            /*
            events: [
				{
					title: 'All Day Event',
					start: '2015-10-30',
					end: '2015-10-30',
					color: "#F4CAA2"
				},
				{
					title: 'Long Event',
					start: '2015-10-30',
					end: '2015-10-30',
					color: '#F4EAA2'
				},
				{
					id: 999,
					title: 'Repeating Event',
					start: '2015-10-09T16:00:00',
					color: '#258ecd'
				},
				{
					id: 999,
					title: 'Repeating Event',
					start: '2015-10-16T16:00:00'
				},
				{
					title: 'Conference',
                    allDay: false,
					start: '2015-10-11',
					end: '2015-10-13',
                    color: '#A2F4F4'
				},
				{
					title: 'Meeting',
					start: '2015-10-12T10:30:00',
					end: '2015-10-12T12:30:00',
                    color: '#F4CAA2'
				},
				{
					title: 'Lunch',
					start: '2015-10-12T12:00:00'
				},
				{
					title: 'Meeting',
					start: '2015-10-12T14:30:00'
				},
				{
					title: 'Happy Hour',
					start: '2015-10-12T17:30:00'
				},
				{
					title: 'Dinner',
					start: '2015-10-12T20:00:00'
				},
				{
					title: 'Birthday Party',
					start: '2015-10-13',
                    color: "#ffa244"
				},
				{
					desciption: "xin chao",
					id: 123,
					title: 'Click for Google',
					url: 'http://google.com/',
					start: '2015-10-22',
                    end: '2015-10-23'
				}				
				,{
					desciption: "my repeat",
					
					title: 'my repeat',
					
					start: '02:00',
                    end: '03:00',
					dow: [6,4]
				}
			]*/
		});
		
	});

$(document).ready(function(){
  if($(window).width() < 415){
    $('.fc-toolbar').find('.fc-right').css({
        'display': 'block',
        'float': 'left',
        'margin-top':'10px'
    });
  }
  // $('.fc-toolbar').find('.fc-left').addClass('fc-left-fixedmobile');
  //hide popup repeat when click btn done
  $('body').on('click', '.btn_ok_repeat', function(){
   $('.popup-check-repeat').removeClass('md-show');
  });

  //hide popup repeat when click btn cancel
  $('body').on('click', '.btn_cancel_repeat', function(){
   $('.popup-check-repeat').removeClass('md-show');
    $('#event-repeat').attr('checked',false);
  });

  //trash btn click
  /*$('body').on('click','#btn-delete', function(event){
    event.preventDefault();
    event.stopPropagation();
    $('.popup_delete_option').fadeIn();
    return false;
  });*/

  //cancel popup option delete
  $('body').on('click', '#btn_delete_option', function(){
    $('.popup_delete_option').fadeOut();
  });

  $('body').on('click', function(event){
    if(!$(event.target).is('.content_popup', '.content_popup *', '#btn-delete', '#btn-delete *')){
    $('.popup_delete_option').fadeOut();
    }
  });
});

<?php if ($this->eventId):?>
    showEditPopup(<?= $this->eventId ?>);
<?php endif; ?>
  
</script>
