<?php
/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
include_once $GLOBALS['THRIFT_ROOT'].'/Thrift.php';


$GLOBALS['gntmobioncommon_E_MErrorCode'] = array(
  'ERROR_SUCCESS' => 0,
  'ERROR_FAILURE' => 1,
  'ERROR_WRONG_PARAM' => 2,
  'ERROR_KEY_NOT_FOUND' => 3,
  'ERROR_ALREADY_EXIST' => 4,
  'ERROR_DATABASE' => 5,
  'ERROR_INTERNAL' => 6,
  'ERROR_NOT_ALLOW' => 7,
  'ERROR_PROFILE_FAILURE' => 10000,
  'ERROR_PROFILE_WRONG_PARAM' => 10001,
  'ERROR_PROFILE_KEY_NOT_FOUND' => 10002,
  'ERROR_PROFILE_ALREADY_EXIST' => 10003,
  'ERROR_PROFILE_DATABASE' => 10004,
  'ERROR_PROFILE_INTERNAL' => 10005,
  'ERROR_PROFILE_TOKEN_NOT_VALID' => 10006,
  'ERROR_PROFILE_NOT_ALLOW' => 10007,
  'ERROR_PROFILE_EMAIL_IS_USED' => 10008,
  'ERROR_PROFILE_WRONG_EMAIL' => 10009,
  'ERROR_PROFILE_WRONG_EMAIL_PASSWORD' => 10010,
  'ERROR_PROFILE_WRONG_TOKEN_PASSWORD' => 10011,
  'ERROR_PROFILE_WRONG_PASSWORD' => 10012,
  'ERROR_PROFILE_FAIL_IN_ACCOUNT_STORAGE' => 10013,
  'ERROR_PROFILE_FAIL_IN_EMAIL_ACCOUNT_STORAGE' => 10014,
  'ERROR_PROFILE_FAIL_IN_VIRTUAL_STORAGE' => 10015,
  'ERROR_PROFILE_FAIL_IN_REALPROFILE_STORAGE' => 10016,
  'ERROR_PROFILE_FAIL_IN_AUTH_STORAGE' => 10017,
  'ERROR_PROFILE_FAIL_IN_FBACC_STORAGE' => 10018,
  'ERROR_PROFILE_FAIL_IN_FOLLOW_STORAGE' => 10019,
  'ERROR_PROFILE_FAILED_GETTING_FB_ID' => 10020,
  'ERROR_PROFILE_FB_ID_NOT_FOUND' => 10021,
  'ERROR_PROFILE_FB_ID_ALREADY_EXISTS' => 10022,
  'ERROR_PROFILE_FB_ID_ASSOCIATED' => 10023,
  'ERROR_PROFILE_FB_EMAIL_NOT_MATCHED' => 10024,
  'ERROR_PROFILE_NO_ACCOUNT_WITH_FBID_AND_FBEMAIL' => 10025,
  'ERROR_PROFILE_FB_READY_TO_MERGE' => 10026,
  'ERROR_PROFILE_EMAIL_ALREADY_EXIST_AND_MAPPED_TO_FB' => 10027,
  'ERROR_PROFILE_TOKEN_EXPIRE' => 10028,
);

final class MErrorCode {
  const ERROR_SUCCESS = 0;
  const ERROR_FAILURE = 1;
  const ERROR_WRONG_PARAM = 2;
  const ERROR_KEY_NOT_FOUND = 3;
  const ERROR_ALREADY_EXIST = 4;
  const ERROR_DATABASE = 5;
  const ERROR_INTERNAL = 6;
  const ERROR_NOT_ALLOW = 7;
  const ERROR_PROFILE_FAILURE = 10000;
  const ERROR_PROFILE_WRONG_PARAM = 10001;
  const ERROR_PROFILE_KEY_NOT_FOUND = 10002;
  const ERROR_PROFILE_ALREADY_EXIST = 10003;
  const ERROR_PROFILE_DATABASE = 10004;
  const ERROR_PROFILE_INTERNAL = 10005;
  const ERROR_PROFILE_TOKEN_NOT_VALID = 10006;
  const ERROR_PROFILE_NOT_ALLOW = 10007;
  const ERROR_PROFILE_EMAIL_IS_USED = 10008;
  const ERROR_PROFILE_WRONG_EMAIL = 10009;
  const ERROR_PROFILE_WRONG_EMAIL_PASSWORD = 10010;
  const ERROR_PROFILE_WRONG_TOKEN_PASSWORD = 10011;
  const ERROR_PROFILE_WRONG_PASSWORD = 10012;
  const ERROR_PROFILE_FAIL_IN_ACCOUNT_STORAGE = 10013;
  const ERROR_PROFILE_FAIL_IN_EMAIL_ACCOUNT_STORAGE = 10014;
  const ERROR_PROFILE_FAIL_IN_VIRTUAL_STORAGE = 10015;
  const ERROR_PROFILE_FAIL_IN_REALPROFILE_STORAGE = 10016;
  const ERROR_PROFILE_FAIL_IN_AUTH_STORAGE = 10017;
  const ERROR_PROFILE_FAIL_IN_FBACC_STORAGE = 10018;
  const ERROR_PROFILE_FAIL_IN_FOLLOW_STORAGE = 10019;
  const ERROR_PROFILE_FAILED_GETTING_FB_ID = 10020;
  const ERROR_PROFILE_FB_ID_NOT_FOUND = 10021;
  const ERROR_PROFILE_FB_ID_ALREADY_EXISTS = 10022;
  const ERROR_PROFILE_FB_ID_ASSOCIATED = 10023;
  const ERROR_PROFILE_FB_EMAIL_NOT_MATCHED = 10024;
  const ERROR_PROFILE_NO_ACCOUNT_WITH_FBID_AND_FBEMAIL = 10025;
  const ERROR_PROFILE_FB_READY_TO_MERGE = 10026;
  const ERROR_PROFILE_EMAIL_ALREADY_EXIST_AND_MAPPED_TO_FB = 10027;
  const ERROR_PROFILE_TOKEN_EXPIRE = 10028;
  static public $__names = array(
    0 => 'ERROR_SUCCESS',
    1 => 'ERROR_FAILURE',
    2 => 'ERROR_WRONG_PARAM',
    3 => 'ERROR_KEY_NOT_FOUND',
    4 => 'ERROR_ALREADY_EXIST',
    5 => 'ERROR_DATABASE',
    6 => 'ERROR_INTERNAL',
    7 => 'ERROR_NOT_ALLOW',
    10000 => 'ERROR_PROFILE_FAILURE',
    10001 => 'ERROR_PROFILE_WRONG_PARAM',
    10002 => 'ERROR_PROFILE_KEY_NOT_FOUND',
    10003 => 'ERROR_PROFILE_ALREADY_EXIST',
    10004 => 'ERROR_PROFILE_DATABASE',
    10005 => 'ERROR_PROFILE_INTERNAL',
    10006 => 'ERROR_PROFILE_TOKEN_NOT_VALID',
    10007 => 'ERROR_PROFILE_NOT_ALLOW',
    10008 => 'ERROR_PROFILE_EMAIL_IS_USED',
    10009 => 'ERROR_PROFILE_WRONG_EMAIL',
    10010 => 'ERROR_PROFILE_WRONG_EMAIL_PASSWORD',
    10011 => 'ERROR_PROFILE_WRONG_TOKEN_PASSWORD',
    10012 => 'ERROR_PROFILE_WRONG_PASSWORD',
    10013 => 'ERROR_PROFILE_FAIL_IN_ACCOUNT_STORAGE',
    10014 => 'ERROR_PROFILE_FAIL_IN_EMAIL_ACCOUNT_STORAGE',
    10015 => 'ERROR_PROFILE_FAIL_IN_VIRTUAL_STORAGE',
    10016 => 'ERROR_PROFILE_FAIL_IN_REALPROFILE_STORAGE',
    10017 => 'ERROR_PROFILE_FAIL_IN_AUTH_STORAGE',
    10018 => 'ERROR_PROFILE_FAIL_IN_FBACC_STORAGE',
    10019 => 'ERROR_PROFILE_FAIL_IN_FOLLOW_STORAGE',
    10020 => 'ERROR_PROFILE_FAILED_GETTING_FB_ID',
    10021 => 'ERROR_PROFILE_FB_ID_NOT_FOUND',
    10022 => 'ERROR_PROFILE_FB_ID_ALREADY_EXISTS',
    10023 => 'ERROR_PROFILE_FB_ID_ASSOCIATED',
    10024 => 'ERROR_PROFILE_FB_EMAIL_NOT_MATCHED',
    10025 => 'ERROR_PROFILE_NO_ACCOUNT_WITH_FBID_AND_FBEMAIL',
    10026 => 'ERROR_PROFILE_FB_READY_TO_MERGE',
    10027 => 'ERROR_PROFILE_EMAIL_ALREADY_EXIST_AND_MAPPED_TO_FB',
    10028 => 'ERROR_PROFILE_TOKEN_EXPIRE',
  );
}

class gntmobioncommon_MException extends TException {
  static $_TSPEC;

  public $msg = null;
  public $errorCode = null;

  public function __construct($vals=null) {
    if (!isset(self::$_TSPEC)) {
      self::$_TSPEC = array(
        1 => array(
          'var' => 'msg',
          'type' => TType::STRING,
          ),
        2 => array(
          'var' => 'errorCode',
          'type' => TType::I32,
          ),
        );
    }
    if (is_array($vals)) {
      if (isset($vals['msg'])) {
        $this->msg = $vals['msg'];
      }
      if (isset($vals['errorCode'])) {
        $this->errorCode = $vals['errorCode'];
      }
    }
  }

  public function getName() {
    return 'MException';
  }

  public function read($input)
  {
    $xfer = 0;
    $fname = null;
    $ftype = 0;
    $fid = 0;
    $xfer += $input->readStructBegin($fname);
    while (true)
    {
      $xfer += $input->readFieldBegin($fname, $ftype, $fid);
      if ($ftype == TType::STOP) {
        break;
      }
      switch ($fid)
      {
        case 1:
          if ($ftype == TType::STRING) {
            $xfer += $input->readString($this->msg);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        case 2:
          if ($ftype == TType::I32) {
            $xfer += $input->readI32($this->errorCode);
          } else {
            $xfer += $input->skip($ftype);
          }
          break;
        default:
          $xfer += $input->skip($ftype);
          break;
      }
      $xfer += $input->readFieldEnd();
    }
    $xfer += $input->readStructEnd();
    return $xfer;
  }

  public function write($output) {
    $xfer = 0;
    $xfer += $output->writeStructBegin('MException');
    if ($this->msg !== null) {
      $xfer += $output->writeFieldBegin('msg', TType::STRING, 1);
      $xfer += $output->writeString($this->msg);
      $xfer += $output->writeFieldEnd();
    }
    if ($this->errorCode !== null) {
      $xfer += $output->writeFieldBegin('errorCode', TType::I32, 2);
      $xfer += $output->writeI32($this->errorCode);
      $xfer += $output->writeFieldEnd();
    }
    $xfer += $output->writeFieldStop();
    $xfer += $output->writeStructEnd();
    return $xfer;
  }

}

?>
